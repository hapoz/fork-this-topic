type Query {
  """
  Check the health status of the API and database
  
  Equivalent to GET /health
  """
  health: Health

  """
  A viewer that wraps all operations authenticated via security scheme 'bearerAuth', which is of type 'http' 'bearer'
  """
  viewerBearerAuth(token: String!): ViewerBearerAuth

  """
  A viewer that wraps operations for all available authentication mechanisms
  """
  viewerAnyAuth(bearerAuth: BearerAuthInput): ViewerAnyAuth
}

type Health {
  database: Database
  memory: Memory
  message: String
  status: String
  success: Boolean
  system: System
  timestamp: String

  """Server uptime in milliseconds"""
  uptime: Float
}

type Database {
  details: String
  status: Status
}

enum Status {
  HEALTHY
  UNHEALTHY
}

type Memory {
  """External memory in MB"""
  external: Float

  """Total heap size in MB"""
  heapTotal: Float

  """Used heap size in MB"""
  heapUsed: Float

  """Resident Set Size in MB"""
  rss: Float
}

type System {
  arch: String
  cwd: String
  denoVersion: String
  platform: String
}

"""A viewer for security scheme 'bearerAuth'"""
type ViewerBearerAuth {
  """
  Retrieve all users (requires admin authentication)
  
  Equivalent to GET /api/admin/users
  """
  getApiAdminUsers: SuccessResponse

  """
  Retrieve all resources (requires authentication)
  
  Equivalent to GET /api/resources
  """
  getApiResources(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Search term for resource description or URL"""
    search: String

    """Filter by topic ID"""
    topicId: String

    """Filter by resource type"""
    type: Type
  ): SuccessResponse

  """
  Retrieve a specific resource by ID (requires authentication)
  
  Equivalent to GET /api/resources/{id}
  """
  getApiResourcesId(
    """Resource ID"""
    id: String!
  ): SuccessResponse

  """
  Search resources by description or URL (requires authentication)
  
  Equivalent to GET /api/resources/search
  """
  getApiResourcesSearch(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Search query"""
    q: String!
  ): SuccessResponse

  """
  Retrieve all topics (requires authentication)
  
  Equivalent to GET /api/topics
  """
  getApiTopics(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Filter by parent topic ID"""
    parentTopicId: String

    """Search term for topic name or content"""
    search: String
  ): SuccessResponse

  """
  Retrieve a specific topic by ID (requires authentication)
  
  Equivalent to GET /api/topics/{id}
  """
  getApiTopicsId(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Get topic and all its subtopics recursively (requires authentication)
  
  Equivalent to GET /api/topics/{id}/tree
  """
  getApiTopicsIdTree(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Get all versions of a topic (requires authentication)
  
  Equivalent to GET /api/topics/{id}/versions
  """
  getApiTopicsIdVersions(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Get a specific version of a topic (requires authentication)
  
  Equivalent to GET /api/topics/{id}/versions/{version}
  """
  getApiTopicsIdVersionsVersion(
    """Topic ID"""
    id: String!

    """Version number"""
    version: Int!
  ): SuccessResponse

  """
  Find shortest path between two topics (requires authentication)
  
  Equivalent to GET /api/topics/path/{from}/{to}
  """
  getApiTopicsPathFromTo(
    """Source topic ID"""
    from: String!

    """Destination topic ID"""
    to: String!
  ): SuccessResponse

  """
  Search topics by name or content (requires authentication)
  
  Equivalent to GET /api/topics/search
  """
  getApiTopicsSearch(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Search query"""
    q: String!
  ): SuccessResponse

  """
  Retrieve a specific user by ID (requires authentication)
  
  Equivalent to GET /api/users/{id}
  """
  getApiUsersId(
    """User ID"""
    id: String!
  ): SuccessResponse

  """
  Retrieve all users with a specific role (requires authentication)
  
  Equivalent to GET /api/users/role/{role}
  """
  getApiUsersRoleRole(
    """User role"""
    role: Role!
  ): SuccessResponse

  """
  Retrieve all users (requires authentication)
  
  Equivalent to GET /api/users
  """
  successResponse: SuccessResponse
}

type SuccessResponse {
  """Response data (varies by endpoint)"""
  data: JSON

  """Success message"""
  message: String
  success: Boolean!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum Type {
  VIDEO
  ARTICLE
  PDF
  LINK
}

enum Role {
  ADMIN
  EDITOR
  VIEWER
}

"""Warning: Not every request will work with this viewer type"""
type ViewerAnyAuth {
  """
  Retrieve all users (requires admin authentication)
  
  Equivalent to GET /api/admin/users
  """
  getApiAdminUsers: SuccessResponse

  """
  Retrieve all resources (requires authentication)
  
  Equivalent to GET /api/resources
  """
  getApiResources(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Search term for resource description or URL"""
    search: String

    """Filter by topic ID"""
    topicId: String

    """Filter by resource type"""
    type: Type
  ): SuccessResponse

  """
  Retrieve a specific resource by ID (requires authentication)
  
  Equivalent to GET /api/resources/{id}
  """
  getApiResourcesId(
    """Resource ID"""
    id: String!
  ): SuccessResponse

  """
  Search resources by description or URL (requires authentication)
  
  Equivalent to GET /api/resources/search
  """
  getApiResourcesSearch(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Search query"""
    q: String!
  ): SuccessResponse

  """
  Retrieve all topics (requires authentication)
  
  Equivalent to GET /api/topics
  """
  getApiTopics(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Filter by parent topic ID"""
    parentTopicId: String

    """Search term for topic name or content"""
    search: String
  ): SuccessResponse

  """
  Retrieve a specific topic by ID (requires authentication)
  
  Equivalent to GET /api/topics/{id}
  """
  getApiTopicsId(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Get topic and all its subtopics recursively (requires authentication)
  
  Equivalent to GET /api/topics/{id}/tree
  """
  getApiTopicsIdTree(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Get all versions of a topic (requires authentication)
  
  Equivalent to GET /api/topics/{id}/versions
  """
  getApiTopicsIdVersions(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Get a specific version of a topic (requires authentication)
  
  Equivalent to GET /api/topics/{id}/versions/{version}
  """
  getApiTopicsIdVersionsVersion(
    """Topic ID"""
    id: String!

    """Version number"""
    version: Int!
  ): SuccessResponse

  """
  Find shortest path between two topics (requires authentication)
  
  Equivalent to GET /api/topics/path/{from}/{to}
  """
  getApiTopicsPathFromTo(
    """Source topic ID"""
    from: String!

    """Destination topic ID"""
    to: String!
  ): SuccessResponse

  """
  Search topics by name or content (requires authentication)
  
  Equivalent to GET /api/topics/search
  """
  getApiTopicsSearch(
    """Number of items per page"""
    limit: Int

    """Page number for pagination"""
    page: Int

    """Search query"""
    q: String!
  ): SuccessResponse

  """
  Retrieve a specific user by ID (requires authentication)
  
  Equivalent to GET /api/users/{id}
  """
  getApiUsersId(
    """User ID"""
    id: String!
  ): SuccessResponse

  """
  Retrieve all users with a specific role (requires authentication)
  
  Equivalent to GET /api/users/role/{role}
  """
  getApiUsersRoleRole(
    """User role"""
    role: Role!
  ): SuccessResponse

  """
  Retrieve all users (requires authentication)
  
  Equivalent to GET /api/users
  """
  successResponse: SuccessResponse
}

"""Bearer auth credentials for security protocol 'bearerAuth'"""
input BearerAuthInput {
  token: String
}

type Mutation {
  """
  Create a new user account
  
  Equivalent to POST /api/users
  """
  postApiUsers(apiUsersInput: ApiUsersInput!): SuccessResponse

  """
  Authenticate user and get JWT token
  
  Equivalent to POST /api/users/login
  """
  postApiUsersLogin(apiUsersLoginInput: ApiUsersLoginInput!): SuccessResponse

  """
  A viewer that wraps all operations authenticated via security scheme 'bearerAuth', which is of type 'http' 'bearer'
  """
  mutationViewerBearerAuth(token: String!): MutationViewerBearerAuth

  """
  A viewer that wraps operations for all available authentication mechanisms
  """
  mutationViewerAnyAuth(bearerAuth: BearerAuthInput): MutationViewerAnyAuth
}

input ApiUsersInput {
  email: String!
  name: String!
  password: String!

  """User role in the system"""
  role: UserRole!
}

enum UserRole {
  ADMIN
  EDITOR
  VIEWER
}

input ApiUsersLoginInput {
  email: String!
  password: String!
}

"""A viewer for security scheme 'bearerAuth'"""
type MutationViewerBearerAuth {
  """
  Delete a resource (requires authentication)
  
  Equivalent to DELETE /api/resources/{id}
  """
  deleteApiResourcesId(
    """Resource ID"""
    id: String!
  ): SuccessResponse

  """
  Delete a topic (requires authentication)
  
  Equivalent to DELETE /api/topics/{id}
  """
  deleteApiTopicsId(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Delete a user (requires authentication)
  
  Equivalent to DELETE /api/users/{id}
  """
  deleteApiUsersId(
    """User ID"""
    id: String!
  ): SuccessResponse

  """
  Create a new resource for a topic (requires authentication)
  
  Equivalent to POST /api/resources
  """
  postApiResources(apiResourcesInput: ApiResourcesInput!): SuccessResponse

  """
  Create a new topic (requires authentication)
  
  Equivalent to POST /api/topics
  """
  postApiTopics(apiTopicsInput: ApiTopicsInput!): SuccessResponse

  """
  Update resource information (requires authentication)
  
  Equivalent to PUT /api/resources/{id}
  """
  putApiResourcesId(
    apiResourceInput: ApiResourceInput!

    """Resource ID"""
    id: String!
  ): SuccessResponse

  """
  Update topic information (creates new version) (requires authentication)
  
  Equivalent to PUT /api/topics/{id}
  """
  putApiTopicsId(
    apiTopicInput: ApiTopicInput!

    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Update user information (requires authentication)
  
  Equivalent to PUT /api/users/{id}
  """
  putApiUsersId(
    apiUserInput: ApiUserInput!

    """User ID"""
    id: String!
  ): SuccessResponse
}

input ApiResourcesInput {
  description: String!

  """ID of the topic this resource belongs to"""
  topicId: String!

  """Type of resource"""
  type: ResourceType!
  url: String!
}

enum ResourceType {
  VIDEO
  ARTICLE
  PDF
  LINK
}

input ApiTopicsInput {
  content: String!
  name: String!

  """ID of parent topic (optional)"""
  parentTopicId: String
}

input ApiResourceInput {
  description: String

  """Type of resource"""
  type: ResourceType
  url: String
}

input ApiTopicInput {
  content: String
  name: String

  """ID of parent topic"""
  parentTopicId: String
}

input ApiUserInput {
  email: String
  name: String

  """User role in the system"""
  role: UserRole
}

"""Warning: Not every request will work with this viewer type"""
type MutationViewerAnyAuth {
  """
  Delete a resource (requires authentication)
  
  Equivalent to DELETE /api/resources/{id}
  """
  deleteApiResourcesId(
    """Resource ID"""
    id: String!
  ): SuccessResponse

  """
  Delete a topic (requires authentication)
  
  Equivalent to DELETE /api/topics/{id}
  """
  deleteApiTopicsId(
    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Delete a user (requires authentication)
  
  Equivalent to DELETE /api/users/{id}
  """
  deleteApiUsersId(
    """User ID"""
    id: String!
  ): SuccessResponse

  """
  Create a new resource for a topic (requires authentication)
  
  Equivalent to POST /api/resources
  """
  postApiResources(apiResourcesInput: ApiResourcesInput!): SuccessResponse

  """
  Create a new topic (requires authentication)
  
  Equivalent to POST /api/topics
  """
  postApiTopics(apiTopicsInput: ApiTopicsInput!): SuccessResponse

  """
  Update resource information (requires authentication)
  
  Equivalent to PUT /api/resources/{id}
  """
  putApiResourcesId(
    apiResourceInput: ApiResourceInput!

    """Resource ID"""
    id: String!
  ): SuccessResponse

  """
  Update topic information (creates new version) (requires authentication)
  
  Equivalent to PUT /api/topics/{id}
  """
  putApiTopicsId(
    apiTopicInput: ApiTopicInput!

    """Topic ID"""
    id: String!
  ): SuccessResponse

  """
  Update user information (requires authentication)
  
  Equivalent to PUT /api/users/{id}
  """
  putApiUsersId(
    apiUserInput: ApiUserInput!

    """User ID"""
    id: String!
  ): SuccessResponse
}