version: '3.8'

services:
  # Main API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: knowledge-base-api
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      # Mount source code for development (comment out for production)
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - knowledge-base-network

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: knowledge-base-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - knowledge-base-network

  # Optional: PostgreSQL database (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: knowledge-base-db
  #   environment:
  #     - POSTGRES_DB=knowledge_base
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=${DB_PASSWORD:-password123}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - knowledge-base-network

  # Optional: MongoDB (uncomment if needed)
  # mongodb:
  #   image: mongo:7
  #   container_name: knowledge-base-mongo
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password123}
  #     - MONGO_INITDB_DATABASE=knowledge_base
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db
  #   restart: unless-stopped
  #   networks:
  #     - knowledge-base-network

volumes:
# redis_data:
# postgres_data:
# mongo_data:

networks:
  knowledge-base-network:
    driver: bridge
